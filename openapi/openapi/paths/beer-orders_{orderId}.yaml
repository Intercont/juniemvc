parameters:
  - name: orderId
    in: path
    description: "ID of the beer order to operate on"
    required: true
    schema:
      type: integer
      format: int32
    example: 1

get:
  tags:
    - BeerOrder
  summary: Get beer order by ID
  description: "Returns a single beer order by its ID."
  operationId: getBeerOrderById
  security:
    - api_key: []
  responses:
    '200':
      description: "Successfully retrieved the beer order"
      content:
        application/json:
          schema:
            $ref: '../components/schemas/BeerOrderDto.yaml'
          example:
            id: 1
            version: 1
            customerRef: "CUST-123"
            paymentAmount: 59.99
            status: "NEW"
            createdDate: "2023-01-15T12:00:00Z"
            updatedDate: "2023-01-15T12:00:00Z"
            beerOrderLines:
              - id: 1
                version: 1
                beerId: 123
                orderQuantity: 6
                quantityAllocated: 0
                status: "NEW"
                createdDate: "2023-01-15T12:00:00Z"
                updatedDate: "2023-01-15T12:00:00Z"
    '401':
      description: "Unauthorized"
    '404':
      description: "Beer order not found"

put:
  tags:
    - BeerOrder
  summary: Update beer order
  description: "Updates an existing beer order in the system."
  operationId: updateBeerOrder
  security:
    - api_key: []
  requestBody:
    description: "Updated beer order object"
    required: true
    content:
      application/json:
        schema:
          $ref: '../components/schemas/BeerOrderDto.yaml'
        example:
          customerRef: "CUST-123-UPDATED"
          paymentAmount: 69.99
          beerOrderLines:
            - beerId: 123
              orderQuantity: 8
  responses:
    '200':
      description: "Successfully updated the beer order"
      content:
        application/json:
          schema:
            $ref: '../components/schemas/BeerOrderDto.yaml'
          example:
            id: 1
            version: 2
            customerRef: "CUST-123-UPDATED"
            paymentAmount: 69.99
            status: "PROCESSING"
            createdDate: "2023-01-15T12:00:00Z"
            updatedDate: "2023-01-25T09:45:00Z"
            beerOrderLines:
              - id: 1
                version: 2
                beerId: 123
                orderQuantity: 8
                quantityAllocated: 0
                status: "NEW"
                createdDate: "2023-01-15T12:00:00Z"
                updatedDate: "2023-01-25T09:45:00Z"
    '400':
      description: "Invalid beer order data provided"
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Validation failed"
              errors:
                type: array
                items:
                  type: string
                example: ["Customer reference is required", "Payment amount must be positive"]
    '401':
      description: "Unauthorized"
    '404':
      description: "Beer order not found"

delete:
  tags:
    - BeerOrder
  summary: Delete beer order
  description: "Deletes a beer order from the system."
  operationId: deleteBeerOrder
  security:
    - api_key: []
  responses:
    '204':
      description: "Successfully deleted the beer order"
    '401':
      description: "Unauthorized"
    '404':
      description: "Beer order not found"